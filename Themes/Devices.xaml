<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:control="clr-namespace:AeonHacs.Wpf.Controls"
                    xmlns:c="clr-namespace:AeonHacs.Wpf.Converters"
                    xmlns:s="clr-namespace:AeonHacs.Wpf.Shapes"
                    xmlns:v="clr-namespace:AeonHacs.Wpf.Views"
                    mc:Ignorable="d">

    <Style TargetType="{x:Type v:View}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:View}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type v:Switch}" BasedOn="{StaticResource {x:Type v:View}}">
        <Setter Property="Background" Value="{DynamicResource OffBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource EdgeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="19"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="IsOn" Value="{Binding Component.IsOn, RelativeSource={RelativeSource Self}}" />
        <Style.Triggers>
            <Trigger Property="IsOn" Value="True">
                <Setter Property="Background" Value="{DynamicResource OnBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type v:Heater}" BasedOn="{StaticResource {x:Type v:View}}">
        <Setter Property="Background" Value="{DynamicResource NeutralBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource EdgeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="21"/>
        <Setter Property="Width" Value="21"/>
        <Setter Property="IsOn" Value="{Binding Component.IsOn, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:Heater}">
                    <Border x:Name="shape" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Elliptical" Value="True">
                            <Setter TargetName="shape" Property="CornerRadius" Value="1e300" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsOn" Value="True">
                <Setter Property="Background" Value="{DynamicResource HotBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type v:Valve}" BasedOn="{StaticResource {x:Type v:View}}">
        <Setter Property="Background" Value="{DynamicResource UnknownBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource EdgeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="19"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="ValveState" Value="{Binding Component.ValveState, RelativeSource={RelativeSource Self}}" />
        <Style.Triggers>
            <Trigger Property="ValveState" Value="Closed">
                <Setter Property="Background" Value="{DynamicResource ClosedBrush}" />
            </Trigger>
            <Trigger Property="ValveState" Value="Closing">
                <Setter Property="Background" Value="{DynamicResource ClosingBrush}" />
            </Trigger>
            <Trigger Property="ValveState" Value="Opening">
                <Setter Property="Background" Value="{DynamicResource OpeningBrush}" />
            </Trigger>
            <Trigger Property="ValveState" Value="Opened">
                <Setter Property="Background" Value="{DynamicResource OpenedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type v:Restriction}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:Restriction}">
                    <Path Data="m0.5,0.5 l 3,6 v6 l-3,6 h8 l-3,-6 v-6 l3,-6 z" Stroke="{DynamicResource EdgeBrush}" StrokeLineJoin="Bevel" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type v:Restriction}">
                            <Path Data="m0.5,0.5 l 6,3 h6 l6,-3 v8 l-6,-3 h-6 l-6,3 z" Stroke="{DynamicResource EdgeBrush}" StrokeLineJoin="Bevel" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type v:FTC}" BasedOn="{StaticResource {x:Type v:View}}">
        <Setter Property="Background" Value="{DynamicResource FoamBrush}" />
        <Setter Property="FillLevel" Value="{Binding Component.Temperature, RelativeSource={RelativeSource Self}, Converter={x:Static c:ScaledValueConverter.LiquidNitrogen}}" />
        <Setter Property="FillColor" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static c:DarkenConverter.Instance}, ConverterParameter=0.2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:FTC}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{Binding FillBrush, RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentPresenter MinWidth="21" MinHeight="21"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type v:LNManifold}">
        <Setter Property="BorderBrush" Value="{DynamicResource EdgeBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Component" Value="LNManifold1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:LNManifold}">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        DataContext="{Binding Component, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid v:View.Component="{TemplateBinding Component}" Background="Transparent">
                            <v:FTC Component="{Binding LevelSensor}" IsHitTestVisible="False" />
                            <Label Padding="0,0,8,0" HorizontalAlignment="Right"
                                AutomationProperties.HelpText="LN Manifold level sensor"
                                Content="{Binding LevelSensor.Temperature, FallbackValue='-- &#176;C'}"
                                ContentStringFormat="0 &#176;C" />
                            <StackPanel Margin="10,10,10,10">
                                <Label Content="{TemplateBinding HelpText}" HorizontalContentAlignment="Center" FontSize="10" Margin="0,10,0,10" Padding="0" IsHitTestVisible="False" />
                                <ItemsControl ItemsSource="{TemplateBinding Valves}" HorizontalAlignment="Center">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <control:StackingPanel Orientation="Right" Spacing="4" IsItemsHost="True" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type v:CarbonAnalyzer}">
        <Setter Property="Component" Value="CA1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:CarbonAnalyzer}">
                    <Border>
                        <Canvas Width="84" Height="95">
                            <Rectangle Fill="#42538B" Height="45" HorizontalAlignment="Center" VerticalAlignment="Top" Width="84" v:View.Component="{TemplateBinding Component}" />
                            <Rectangle Fill="#E8E2DF" Width="82" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Canvas.Top="20" Canvas.Left="1" IsHitTestVisible="False"/>
                            <v:Gauge Canvas.Left="25" Canvas.Top="24" Width="56"
                                Component="CA1" DisplayMemberPath="CO2Ppm" ContentStringFormat="0.0"
                                DefaultContentString="0.0" HorizontalAlignment="Left" VerticalAlignment="Center" />

                            <Rectangle Fill="Black" Opacity="0.5" Width="17" Height="7" Canvas.Left="5" Canvas.Top="29" HorizontalAlignment="Left" VerticalAlignment="Center" />
                            <Ellipse Width="5" Height="5" Stroke="Black" Fill="{DynamicResource BodyBrush}" Canvas.Left="7" Canvas.Top="30" HorizontalAlignment="Left" VerticalAlignment="Center" />
                            <Ellipse Width="5" Height="5" Stroke="Black" Fill="{DynamicResource BodyBrush}" Canvas.Left="15" Canvas.Top="30" HorizontalAlignment="Left" VerticalAlignment="Center" />

                            <s:ConvolutedTubing Data="M0,0 v3.5 m0,0 v33 m0,0 v3" Canvas.Top="32.5" HorizontalAlignment="Center" VerticalAlignment="Top" IsHitTestVisible="False" Canvas.Left="6"/>

                            <s:ConvolutedTubing Data="M0,0 v3.5 m0,0 v2 c 0,30 44,5 44,30 v1 m0,0 v3" Canvas.Left="14" Canvas.Top="32.5" HorizontalAlignment="Left" VerticalAlignment="Center" IsHitTestVisible="False"/>

                            <Rectangle Style="{DynamicResource FittingShapeStyle}" Width="9" Height="5" Canvas.Left="5" Canvas.Top="72" />
                            <Rectangle Style="{DynamicResource FittingShapeStyle}" Width="9" Height="5" Canvas.Left="57" Canvas.Top="72" />

                            <v:Valve Component="vIM_CA" Canvas.Top="76" d:ValveState="Closed" />
                            <v:Valve Component="vCA_CTF" Canvas.Left="52" Canvas.Top="76" d:ValveState="Closed" />
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>